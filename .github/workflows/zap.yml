name: zap-baseline

on:
  pull_request:
  push:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  zap:
    if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    concurrency:
      group: zap-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - name: Resolve target URL
        id: target
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "url=https://$GITHUB_REPOSITORY-preview.vercel.app" >> $GITHUB_OUTPUT
          else
            echo "url=https://giuseppegiona.com" >> $GITHUB_OUTPUT
          fi

      - name: Precheck target
        run: |
          code=$(curl -s -o /dev/null -w "%{http_code}" "${{ steps.target.outputs.url }}" || true)
          echo "HTTP status: $code"
          if [[ "$code" != "200" && "$code" != "301" && "$code" != "302" ]]; then
            echo "Target not reachable, skipping ZAP."
            exit 0
          fi

      - name: ZAP Baseline
        uses: zaproxy/action-baseline@v0.11.0
        continue-on-error: true
        with:
          target: ${{ steps.target.outputs.url }}
          cmd_options: "-a -T 120"

      - name: Upload ZAP report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: |
            report_html.html
            zap*.log
          if-no-files-found: warn

      - name: Summarize (always neutral)
        if: always()
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          script: |
            const core = require('@actions/core');
            const pr = context.payload.pull_request;
            const sameRepo =
              pr &&
              pr.head?.repo?.full_name &&
              pr.base?.repo?.full_name &&
              pr.head.repo.full_name === pr.base.repo.full_name;

            const body = [
              'üõ°Ô∏è **ZAP Security Scan Results (neutral)**',
              '',
              'See artifact **zap-report** for the full HTML output.'
            ].join('\n');

            try {
              if (sameRepo) {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  body
                });
                core.info('Posted PR comment with ZAP summary.');
              } else {
                core.info('Skipping PR comment (fork PR or insufficient token permissions).');
              }
            } catch (e) {
              core.warning('Could not post PR comment: ' + e.message);
            }
