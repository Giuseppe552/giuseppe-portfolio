[{"filePath":"/home/runner/work/giuseppe-portfolio/giuseppe-portfolio/src/app/about/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/giuseppe-portfolio/giuseppe-portfolio/src/app/blog/[slug]/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/giuseppe-portfolio/giuseppe-portfolio/src/app/blog/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/giuseppe-portfolio/giuseppe-portfolio/src/app/layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/giuseppe-portfolio/giuseppe-portfolio/src/app/page.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRef' is defined but never used.","line":3,"column":37,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":43},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Github' is defined but never used.","line":6,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":6,"endColumn":16},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Linkedin' is defined but never used.","line":6,"column":18,"nodeType":null,"messageId":"unusedVar","endLine":6,"endColumn":26},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'setLang' is assigned a value but never used.","line":18,"column":16,"nodeType":null,"messageId":"unusedVar","endLine":18,"endColumn":23},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'nav' is assigned a value but never used.","line":31,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":31,"endColumn":12},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'IconLink' is defined but never used.","line":268,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":268,"endColumn":18}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\n\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport Link from \"next/link\";\nimport BackgroundFX from \"@/components/BackgroundFX\";\nimport { Github, Linkedin, Mail, ArrowRight, TerminalSquare, Shield, Bolt, Globe2 } from \"lucide-react\";\nimport { motion } from \"framer-motion\";\nimport ResponsiveHeader from \"@/components/ResponsiveHeader\";\n\n/** ──────────────────────────────────────────────────────────────────────────\n *  Page\n *  Clean build: EN/ITA toggle, typewriter hero, pixel+grid+glow background.\n *  No YouTube section, no avatar. Primary CTA = email, secondary = GitHub.\n *  ────────────────────────────────────────────────────────────────────────── */\n\nexport default function Portfolio() {\n  const [progress, setProgress] = useState(0);\n  const [lang, setLang] = useState<\"EN\" | \"ITA\">(\"EN\");\n\n  useEffect(() => {\n    const onScroll = () => {\n      const h = document.documentElement;\n      const scrolled = (h.scrollTop / (h.scrollHeight - h.clientHeight)) * 100;\n      setProgress(Number.isFinite(scrolled) ? scrolled : 0);\n    };\n    onScroll();\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, []);\n\n  const nav = useMemo(\n    () => [\n      { id: \"about\", label: lang === \"EN\" ? \"About\" : \"Chi Sono\" },\n      { id: \"work\", label: lang === \"EN\" ? \"Work\" : \"Progetti\" },\n      { id: \"projects\", label: lang === \"EN\" ? \"Projects\" : \"Progetti\" },\n      { id: \"contact\", label: lang === \"EN\" ? \"Contact\" : \"Contatti\" },\n    ],\n    [lang]\n  );\n\n  return (\n  <div className=\"min-h-screen text-zinc-100 relative\" style={{fontFamily:'JetBrains Mono, monospace', cursor:'url(/cursor.svg), pointer'}}>\n    <ResponsiveHeader />\n  <BackgroundFX />\n\n\n      {/* Top progress bar */}\n      <div className=\"fixed top-0 left-0 right-0 h-[3px] bg-slate-800 z-50\">\n        <motion.div\n          className=\"h-full bg-indigo-500\"\n          style={{ width: `${progress}%` }}\n          initial={{ width: 0 }}\n          animate={{ width: `${progress}%` }}\n          transition={{ type: \"tween\", duration: 0.08 }}\n          aria-hidden\n        />\n      </div>\n\n      {/* Hero Section */}\n      <section className=\"relative py-24 md:py-32\">\n        <div className=\"mx-auto max-w-6xl px-4\">\n          <motion.div\n            initial={{ opacity: 0, y: 40 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.7, ease: \"easeOut\" }}\n          >\n            <div className=\"flex items-center gap-4 mt-2\">\n              <h1 className=\"text-4xl md:text-5xl font-semibold tracking-tight\">Giuseppe</h1>\n              <span className=\"text-lg font-mono text-indigo-400\">&quot;joo-zep-peh&quot;</span>\n              <button\n                aria-label=\"Play pronunciation\"\n                className=\"bg-slate-900 text-indigo-400 rounded-full p-2 hover:bg-indigo-500 hover:text-white transition\"\n                onClick={() => {\n                  const audio = new Audio('/giuseppe-pronunciation.m4a');\n                  audio.play();\n                }}\n              >\n                <svg width=\"20\" height=\"20\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M3 8v4h4l5 5V3L7 8H3z\"/></svg>\n              </button>\n            </div>\n            <Typewriter\n              text={\n                lang === \"EN\"\n                  ? \"Mathematics graduate who likes building clean systems. Security-curious, automation-heavy, and obsessed with removing friction. I share what I learn and ship small projects often.\"\n                  : \"Laureato in matematica: mi piace costruire sistemi puliti. Curioso di sicurezza, automazione ovunque e ossessionato dall'eliminare attriti. Condivido quello che imparo e pubblico progetti spesso.\"\n              }\n            />\n            <div className=\"mt-6 flex flex-wrap gap-3\">\n              <a\n                href=\"https://calendly.com/giuseppegiona/30min\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"inline-flex items-center gap-2 px-4 py-2 rounded-xl bg-slate-800 text-white font-medium shadow hover:bg-slate-700 transition hover:animate-pulse\"\n              >\n                Book a Call\n                <svg width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"black\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7 5l5 5-5 5\" stroke=\"black\" strokeWidth=\"2\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/></svg>\n              </a>\n              <a\n                href=\"mailto:contact.giuseppe00@gmail.com?subject=Project%20enquiry%20from%20giuseppegiona.com\"\n                className=\"inline-flex items-center gap-2 px-4 py-2 rounded-xl bg-slate-800 text-white font-medium shadow hover:bg-slate-700 transition hover:animate-pulse\"\n              >\n                Email Me\n                <svg width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"black\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7 5l5 5-5 5\" stroke=\"black\" strokeWidth=\"2\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/></svg>\n              </a>\n              <Link\n                href=\"/projects\"\n                className=\"inline-flex items-center gap-2 px-4 py-2 rounded-xl border border-slate-700 bg-transparent text-zinc-100 hover:bg-slate-900 transition hover:animate-pulse\"\n              >\n                See Projects\n                <svg width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"white\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7 5l5 5-5 5\" stroke=\"white\" strokeWidth=\"2\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/></svg>\n              </Link>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Value props */}\n      <section id=\"about\" className=\"border-t border-zinc-800\">\n        <div className=\"mx-auto max-w-6xl px-4 py-16 grid md:grid-cols-3 gap-6\">\n          <ValueCard\n            Icon={TerminalSquare}\n            title={lang === \"EN\" ? \"Software Engineering\" : \"Ingegneria del Software\"}\n            desc={\n              lang === \"EN\"\n                ? \"Full-stack systems, automation, and privacy tooling with measurable outcomes.\"\n                : \"Sistemi full-stack, automazione e strumenti per la privacy con risultati misurabili.\"\n            }\n          />\n          <ValueCard\n            Icon={Shield}\n            title={lang === \"EN\" ? \"Security Mindset\" : \"Mentalità di Sicurezza\"}\n            desc={\n              lang === \"EN\"\n                ? \"Threat modeling, data minimization, and sane defaults. Build it right, then harden it.\"\n                : \"Threat modeling, minimizzazione dei dati e default sensati. Costruire bene, poi indurire.\"\n            }\n          />\n          <ValueCard\n            Icon={Bolt}\n            title={lang === \"EN\" ? \"Business Leverage\" : \"Leva di Business\"}\n            desc={\n              lang === \"EN\"\n                ? \"Remove inefficiency, speed up loops, and systemize delivery to compound results.\"\n                : \"Rimuovere inefficienze, accelerare i cicli e sistematizzare la consegna per risultati composti.\"\n            }\n          />\n        </div>\n      </section>\n\n      {/* Work */}\n      <section id=\"work\" className=\"border-t border-zinc-800\">\n        <div className=\"mx-auto max-w-6xl px-4 py-16\">\n          <SectionTitle\n            kicker={lang === \"EN\" ? \"Selected Work\" : \"Selezione\"}\n            title={lang === \"EN\" ? \"Things I've Shipped\" : \"Cose che ho pubblicato\"}\n          />\n          <div className=\"mt-8 grid md:grid-cols-2 gap-6\">\n            <ProjectCard\n              title=\"Ghost Protocol\"\n              desc={\n                lang === \"EN\"\n                  ? \"Hardened Tor + Firefox launcher with leak checks and a sidecar dashboard to verify network posture.\"\n                  : \"Launcher Tor + Firefox rinforzato con verifiche di leak e dashboard per controllare la postura di rete.\"\n              }\n              tags={[\"Python\", \"Firefox\", \"Tor\", \"Ops\"]}\n              href=\"https://github.com/Giuseppe552/ghost-protocol\"\n            />\n            <ProjectCard\n              title=\"JobMate AI\"\n              desc={\n                lang === \"EN\"\n                  ? \"CV ↔ job description matcher with semantic scoring and a modern web UI.\"\n                  : \"Matcher CV ↔ job description con scoring semantico e interfaccia web moderna.\"\n              }\n              tags={[\"Python\", \"Flask\", \"React\", \"NLP\"]}\n              href=\"https://github.com/Giuseppe552/jobmate-ai\"\n            />\n            <ProjectCard\n              title=\"Secure Messaging CLI\"\n              desc={\n                lang === \"EN\"\n                  ? \"End-to-end encrypted messaging CLI in Python. Simple, secure, and privacy-focused.\"\n                  : \"CLI di messaggistica cifrata end-to-end in Python. Semplice, sicuro, privacy al centro.\"\n              }\n              tags={[\"Python\", \"Encryption\", \"CLI\"]}\n              href=\"https://github.com/Giuseppe552/secure-messaging-cli\"\n            />\n            <ProjectCard\n              title=\"Zenith EV Trend Analyzer\"\n              desc={\n                lang === \"EN\"\n                  ? \"Automating UK EV fleet data to reveal electrification trends and leasing risks.\"\n                  : \"Automazione dati flotte EV UK per trend e rischi di leasing.\"\n              }\n              tags={[\"Python\", \"Data\", \"EV\", \"Automation\"]}\n              href=\"https://github.com/Giuseppe552/zenith-ev-trend-analyzer\"\n            />\n          </div>\n        </div>\n      </section>\n\n      {/* Contact */}\n      <section id=\"contact\" className=\"border-t border-zinc-800\">\n        <div className=\"mx-auto max-w-6xl px-4 py-16\">\n          <SectionTitle kicker={lang === \"EN\" ? \"Get in touch\" : \"Contatti\"} title={lang === \"EN\" ? \"Let's Build\" : \"Costruiamo\"} />\n          <div className=\"mt-6 grid md:grid-cols-[1fr,1fr] gap-6\">\n            <div className=\"rounded-2xl border border-zinc-800 bg-zinc-800 p-6\">\n              <div className=\"flex items-center gap-3 text-zinc-300\">\n                <Mail size={18} className=\"text-indigo-400\" />\n                <a href=\"mailto:contact.giuseppe00@gmail.com\" className=\"hover:underline\">\n                  contact.giuseppe00@gmail.com\n                </a>\n              </div>\n              <div className=\"flex items-center gap-3 mt-3 text-zinc-300\">\n                <Globe2 size={18} className=\"text-indigo-400\" />\n                <span>{lang === \"EN\" ? \"Based in the UK • Working globally\" : \"Basato nel Regno Unito • Lavoro a livello globale\"}</span>\n              </div>\n            </div>\n            <div className=\"rounded-2xl border border-zinc-800 bg-zinc-800 p-6\">\n              <p className=\"text-zinc-300\">\n                {lang === \"EN\"\n                  ? \"For collaborations or ideas—send context and your ideal outcome. I reply when there's a clear problem and tight scope.\"\n                  : \"Per collaborazioni o idee—mandami contesto e l'obiettivo. Rispondo quando il problema è chiaro e lo scope è stretto.\"}\n              </p>\n              <div className=\"mt-4 flex flex-wrap gap-3\">\n                <PrimaryCTA href=\"mailto:contact.giuseppe00@gmail.com?subject=Hello\" label={lang === \"EN\" ? \"Email me\" : \"Scrivimi\"} />\n                <GhostCTA href=\"https://github.com/Giuseppe552\" label={lang === \"EN\" ? \"See GitHub projects\" : \"Vedi progetti su GitHub\"} />\n              <GhostCTA href=\"/projects\" label={lang === \"EN\" ? \"See Projects\" : \"Vedi progetti\"} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <footer className=\"border-t border-zinc-800 py-10\">\n        <div className=\"mx-auto max-w-6xl px-4 text-xs text-zinc-500 flex items-center justify-between\">\n          <span>© {new Date().getFullYear()} Giuseppe Giona</span>\n          <span className=\"font-mono\">v1.2 • built with React</span>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\n/* ───────────────────────── Helpers ───────────────────────── */\n\nfunction Typewriter({ text }: { text: string }) {\n  const [shown, setShown] = React.useState(0);\n  React.useEffect(() => {\n    setShown(0);\n    let i = 0;\n    const step = () => {\n      i = Math.min(text.length, i + 2);\n      setShown(i);\n      if (i < text.length) requestAnimationFrame(step);\n    };\n    const id = requestAnimationFrame(step);\n    return () => cancelAnimationFrame(id);\n  }, [text]);\n  return (\n    <p className=\"text-zinc-300 mt-4 max-w-2xl font-light\">\n      {text.slice(0, shown)}\n      <span className=\"inline-block w-2 h-5 align-[-2px] bg-indigo-400 animate-pulse ml-1\" />\n    </p>\n  );\n}\n\nfunction IconLink({ href, label, Icon }: { href: string; label: string; Icon: React.ComponentType<{size?: number, color?: string}> }) {\n  return (\n    <a\n      href={href}\n      aria-label={label}\n      className=\"p-2 rounded-lg border border-zinc-800 bg-zinc-900/50 hover:bg-zinc-900 transition\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      <Icon size={18} />\n    </a>\n  );\n}\n\nfunction PrimaryCTA({ href, label }: { href: string; label: string }) {\n  return (\n    <a href={href} className=\"inline-flex items-center gap-2 px-4 py-2 rounded-xl bg-slate-800 text-white font-medium shadow hover:bg-slate-700 transition\">\n      {label} <ArrowRight size={16} />\n    </a>\n  );\n}\n\nfunction GhostCTA({ href, label }: { href: string; label: string }) {\n  return (\n    <a href={href} className=\"inline-flex items-center gap-2 px-4 py-2 rounded-xl border border-slate-700 bg-transparent text-zinc-100 hover:bg-slate-900 transition\">\n      {label}\n    </a>\n  );\n}\n\nfunction SectionTitle({ kicker, title }: { kicker: string; title: string }) {\n  return (\n    <div>\n      <p className=\"font-mono text-indigo-400\">{kicker}</p>\n      <h2 className=\"text-2xl md:text-3xl font-semibold mt-2\">{title}</h2>\n    </div>\n  );\n}\n\nfunction ValueCard({ Icon, title, desc }: { Icon: React.ComponentType<{size?: number; className?: string}> ; title: string; desc: string }) {\n  return (\n    <div className=\"rounded-2xl border border-slate-800 bg-slate-900 p-6 shadow-[0_20px_60px_-24px_rgba(0,0,0,0.35)] hover:shadow-[0_30px_90px_-28px_rgba(79,70,229,0.18)] hover:border-indigo-500/40 transition-shadow\">\n      <div className=\"flex items-center gap-3\">\n        <Icon className=\"text-indigo-400\" size={20} />\n        <h3 className=\"font-medium text-zinc-100\">{title}</h3>\n      </div>\n      <p className=\"text-zinc-300 mt-2 text-sm\">{desc}</p>\n    </div>\n  );\n}\n\nfunction ProjectCard({ title, desc, tags, href }: { title: string; desc: string; tags: string[]; href: string }) {\n  return (\n    <a\n  href={href}\n  target=\"_blank\"\n  rel=\"noreferrer\"\n  className=\"group rounded-2xl border border-zinc-800 bg-zinc-800 p-6 block\n             hover:border-indigo-500/50\n             shadow-[0_24px_80px_-28px_rgba(0,0,0,0.38)]\n             hover:shadow-[0_36px_120px_-30px_rgba(79,70,229,0.22)]\n             transition-shadow\"\n>\n\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-medium text-zinc-100\">{title}</h3>\n        <ArrowRight size={16} className=\"opacity-0 group-hover:opacity-100 text-indigo-400 transition\" />\n      </div>\n      <p className=\"text-zinc-300 mt-2 text-sm\">{desc}</p>\n      <div className=\"mt-3 flex flex-wrap gap-2\">\n        {tags.map((t) => (\n          <span key={t} className=\"text-xs px-2 py-1 rounded-md border border-zinc-700 text-zinc-300\">\n            {t}\n          </span>\n        ))}\n      </div>\n    </a>\n  );\n}\n\n\n\n","usedDeprecatedRules":[]},{"filePath":"/home/runner/work/giuseppe-portfolio/giuseppe-portfolio/src/app/projects/[repo]/page.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'ReactMarkdown' is defined but never used.","line":5,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":5,"endColumn":21},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":72,"column":13,"nodeType":"JSXOpeningElement","endLine":72,"endColumn":165}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { notFound } from \"next/navigation\";\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { GHRepo, getPortfolioRepos } from \"@/lib/github\";\nimport ReactMarkdown from \"react-markdown\";\n\nexport const metadata = {\n  title: \"Project Details – Giuseppe Giona\",\n};\n\nasync function fetchReadme(repo: string): Promise<string | null> {\n  const url = `https://raw.githubusercontent.com/Giuseppe552/${repo}/main/README.md`;\n  try {\n    const res = await fetch(url, { next: { revalidate: 21600 } });\n    if (!res.ok) return null;\n    return await res.text();\n  } catch {\n    return null;\n  }\n}\n\nexport default async function ProjectDetailPage(props: { params: Promise<{ repo: string }> }) {\n  const params = await props.params;\n  const repos: GHRepo[] = await getPortfolioRepos();\n  const repo = repos.find(r => r.name === params.repo);\n  if (!repo) return notFound();\n  let readme = await fetchReadme(repo.name);\n  if (!readme) return notFound();\n  // Rewrite relative image srcs to absolute raw GitHub URLs\n  const rawBase = `https://raw.githubusercontent.com/Giuseppe552/${repo.name}/main/`;\n  readme = readme.replace(/<img\\s+([^>]*src=[\"'])(?!https?:\\/\\/|data:)([^\"'>]+)([\"'][^>]*)>/gi, (match, p1, src, p3) => {\n    return `<img ${p1}${rawBase}${src}${p3}>`;\n  });\n\n  // Summarize README: remove emojis, extract first paragraph, language, and effect\n  function summarizeReadme(md: string, repoData: GHRepo): { summary: string, languages: string[], effect: string, image?: string } {\n    // Remove emojis\n    md = md.replace(/:[^:]+:/g, \"\");\n    md = md.replace(/\\p{Emoji}/gu, \"\");\n    // Get first non-empty paragraph\n    const summaryMatch = md.match(/(?:^|\\n)([^#\\n][^\\n]+)/);\n    const summary = summaryMatch ? summaryMatch[1].trim() : \"No summary available.\";\n    // Guess languages from code blocks and repo.language\n    const langSet = new Set<string>();\n    if (repoData?.language) langSet.add(repoData.language);\n    md.replace(/```(\\w+)/g, (_, l) => { langSet.add(l); return \"\"; });\n    // Try to extract effect/impact from README (look for 'effect', 'impact', 'result', 'outcome')\n    const effectMatch = md.match(/(?:effect|impact|result|outcome)[^\\n]*[:\\-]?\\s*([^\\n]+)/i);\n    const effect = effectMatch ? effectMatch[1].trim() : \"\";\n    // Find first image (markdown or HTML)\n    let image;\n    const mdImgMatch = md.match(/!\\[[^\\]]*\\]\\(([^)]+)\\)/);\n    if (mdImgMatch) image = mdImgMatch[1];\n    else {\n      const htmlImgMatch = md.match(/<img[^>]*src=[\"']([^\"'>]+)[\"'][^>]*>/i);\n      if (htmlImgMatch) image = htmlImgMatch[1];\n    }\n    // If image is relative, convert to raw GitHub URL\n    if (image && !/^https?:\\/\\//.test(image)) {\n      image = `https://raw.githubusercontent.com/Giuseppe552/${repoData.name}/main/${image.replace(/^\\/?/,\"\")}`;\n    }\n    return { summary, languages: Array.from(langSet), effect, image };\n  }\n  const { summary, languages, effect, image } = summarizeReadme(readme, repo);\n  return (\n    <main className=\"min-h-screen bg-black text-zinc-100 py-16\">\n      <div className=\"mx-auto max-w-3xl px-4\">\n        <Link href=\"/projects\" className=\"text-indigo-400 underline mb-6 inline-block\">← Back to projects</Link>\n        <h1 className=\"text-2xl font-bold mb-4\">{repo.name}</h1>\n        <div className=\"border border-neutral-800 bg-zinc-900 rounded-2xl p-6 mb-24 shadow-lg\">\n          {image && (\n            <img src={image} alt=\"Project demo\" className=\"rounded-xl border border-neutral-700 mx-auto my-6 max-w-full shadow\" style={{ background: '#18181b' }} />\n          )}\n          <div className=\"mb-4 text-lg text-zinc-200\">{summary}</div>\n          <div className=\"flex flex-wrap gap-2 mb-4\">\n            {languages.map(lang => (\n              <span key={lang} className=\"text-xs bg-zinc-800 text-indigo-400 px-2 py-1 rounded font-mono\">{lang}</span>\n            ))}\n          </div>\n          {effect && (\n            <div className=\"text-sm text-zinc-400\"><span className=\"font-semibold text-indigo-400\">Effect:</span> {effect}</div>\n          )}\n        </div>\n      </div>\n      <div className=\"fixed bottom-0 left-0 right-0 bg-black/80 border-t border-zinc-800 py-4 px-4 text-center z-50\">\n        <a href=\"mailto:contact.giuseppe00@gmail.com?subject=Project%20enquiry%20from%20giuseppegiona.com\" className=\"inline-block bg-indigo-500 text-black font-semibold px-6 py-2 rounded-xl shadow hover:bg-indigo-400 transition\">Like this quality? Get a quote →</a>\n      </div>\n    </main>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/runner/work/giuseppe-portfolio/giuseppe-portfolio/src/app/projects/page.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'GITHUB_USER' is assigned a value but never used.","line":13,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":13,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'isGithubRepoUrl' is defined but never used.","line":15,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":15,"endColumn":25}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { getPortfolioRepos, coverFor, GHRepo, repoTitle } from \"@/lib/github\";\nimport React from \"react\";\nimport Link from \"next/link\";\nimport ProjectsGridWrapper from \"@/components/ProjectsGridWrapper\";\nimport ResponsiveHeader from \"@/components/ResponsiveHeader\";\nimport BackgroundFX from \"@/components/BackgroundFX\";\nimport ProjectsScrollBar from \"@/components/ProjectsScrollBar\";\n\nexport const metadata = {\n  title: \"Projects – Giuseppe Giona\",\n};\n\nconst GITHUB_USER = 'Giuseppe552';\n\nfunction isGithubRepoUrl(input: string): boolean {\n  try {\n    const u = new URL(input);\n    if (!(u.protocol === \"http:\" || u.protocol === \"https:\")) return false;\n    if (u.hostname !== \"github.com\") return false;\n    const parts = u.pathname.split(\"/\").filter(Boolean);\n    return parts.length >= 2 && /^[A-Za-z0-9_.-]+$/.test(parts[0]) && /^[A-Za-z0-9_.-]+$/.test(parts[1]);\n  } catch { return false; }\n}\n\nexport default async function ProjectsPage() {\n  let repos: GHRepo[] = [];\n  try {\n    repos = await getPortfolioRepos();\n  } catch {}\n  const cards = await Promise.all(\n    repos.map(async (repo) => {\n      const img = await coverFor(repo);\n      let summary = '';\n      let demoImg = '';\n      try {\n        const res = await fetch(`https://raw.githubusercontent.com/Giuseppe552/${repo.name}/main/README.md`);\n        if (res.ok) {\n          const readme = await res.text();\n          // Simple summary: first 2 non-empty lines, stripped of markdown and emojis\n          summary = readme\n            .replace(/[#*_`>\\-]/g, '') // remove markdown\n            .replace(/:[^\\s]+:/g, '') // remove emoji shortcodes\n            .split('')\n            .filter(char => {\n              const code = char.codePointAt(0);\n              return !code || code < 0x1F600 || code > 0x1F6FF; // filter emoji range safely\n            })\n            .join('')\n            .split('\\n')\n            .map(line => line.trim())\n            .filter(line => line.length > 0)\n            .slice(0, 2)\n            .join(' ');\n          // Extract first image URL (screenshot/demo/gif)\n          const imgMatch = readme.match(/<img[^>]+src=[\"']([^\"'>]+)[\"'][^>]*>/i);\n          if (imgMatch && imgMatch[1]) {\n            demoImg = imgMatch[1].startsWith('http') ? imgMatch[1] : `https://raw.githubusercontent.com/Giuseppe552/${repo.name}/main/${imgMatch[1]}`;\n          }\n        }\n      } catch {}\n      return {\n        name: repoTitle(repo.name),\n        description: repo.description,\n        stargazers_count: repo.stargazers_count,\n        language: repo.language,\n        homepage: repo.homepage,\n        html_url: repo.html_url,\n        img,\n        summary,\n        demoImg,\n      };\n    })\n  );\n\n\n  return (\n    <div className=\"min-h-screen text-zinc-100 relative\" style={{fontFamily:'JetBrains Mono, monospace'}}>\n  <BackgroundFX scanlinePosition=\"none\" />\n      {/* Grid overlay to match homepage */}\n      <div className=\"pointer-events-none fixed inset-0 -z-10 [mask-image:radial-gradient(ellipse_at_center,black,transparent_65%)] opacity-25\">\n        <svg className=\"absolute inset-0 w-full h-full\" xmlns=\"http://www.w3.org/2000/svg\">\n          <defs>\n            <pattern id=\"grid\" width=\"32\" height=\"32\" patternUnits=\"userSpaceOnUse\">\n              <path d=\"M 32 0 L 0 0 0 32\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"0.5\" />\n            </pattern>\n          </defs>\n          <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" className=\"text-emerald-400\" />\n        </svg>\n      </div>\n  <ResponsiveHeader />\n      <main className=\"py-16\">\n        {/* Top progress bar */}\n        <ProjectsScrollBar />\n        <div className=\"mx-auto max-w-6xl px-4\">\n          <h1 className=\"text-3xl md:text-4xl font-bold mb-8\">Projects</h1>\n          <div className=\"flex flex-col md:flex-row md:items-center justify-between mb-8 gap-4\">\n            <p className=\"text-lg text-zinc-300\">Here are my recent projects showcased below.</p>\n          </div>\n          {cards.length === 0 ? (\n            <div className=\"text-center py-24 text-zinc-400\">\n              <p>No featured projects found. If you see this, GitHub API may be rate-limited or repos aren\u0019t tagged <span className=\"font-mono text-emerald-400\">portfolio</span>.</p>\n            </div>\n          ) : (\n            <ProjectsGridWrapper cards={cards} />\n          )}\n        </div>\n        {/* Contact section below projects grid - match homepage footer style */}\n        <section id=\"contact\" className=\"border-t border-zinc-800\">\n          <div className=\"mx-auto max-w-6xl px-4 py-16\">\n            <h2 className=\"font-mono text-indigo-400 text-lg mb-2\">Get in touch</h2>\n            <h3 className=\"text-3xl md:text-4xl font-bold mb-4\">Let&apos;s Build</h3>\n            <div className=\"rounded-2xl border border-zinc-800 bg-zinc-800 p-6 mb-6\">\n              <div className=\"flex items-center gap-3 text-zinc-300\">\n                <span className=\"font-mono text-indigo-400\">contact.giuseppe00@gmail.com</span>\n              </div>\n              <div className=\"flex items-center gap-3 mt-3 text-zinc-300\">\n                <span className=\"text-indigo-400\">Based in the UK • Working globally</span>\n              </div>\n            </div>\n            <div className=\"rounded-2xl border border-zinc-800 bg-zinc-800 p-6\">\n              <p className=\"text-zinc-300 mb-4\">\n                Got an idea or want to collaborate? Just send a quick message with what you&apos;re thinking—I&apos;m always happy to chat and help out. Let&apos;s make something cool together!\n              </p>\n              <div className=\"mt-4 flex flex-wrap gap-3\">\n                <a href=\"mailto:contact.giuseppe00@gmail.com?subject=Hello\" className=\"inline-flex items-center gap-2 px-4 py-2 rounded-xl bg-indigo-500 text-white font-medium shadow hover:bg-indigo-400 transition\">Email me</a>\n                <Link href=\"/projects\" className=\"inline-flex items-center gap-2 px-4 py-2 rounded-xl border border-zinc-700 bg-transparent text-zinc-100 hover:bg-zinc-900 transition\">See Projects</Link>\n              </div>\n            </div>\n          </div>\n        </section>\n      </main>\n  {/* Removed SiteFooter to avoid duplicate contact section */}\n  <ProjectsScrollBar />\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/runner/work/giuseppe-portfolio/giuseppe-portfolio/src/app/robots.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/giuseppe-portfolio/giuseppe-portfolio/src/app/sitemap.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/giuseppe-portfolio/giuseppe-portfolio/src/components/BackgroundFX.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/giuseppe-portfolio/giuseppe-portfolio/src/components/HomepageProjectsCTA.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/giuseppe-portfolio/giuseppe-portfolio/src/components/LeadCaptureModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/giuseppe-portfolio/giuseppe-portfolio/src/components/ProjectsGrid.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'GHRepo' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":16},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":52,"column":15,"nodeType":"JSXOpeningElement","endLine":63,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\nimport React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { GHRepo, repoTitle } from \"@/lib/github\";\n\nexport type ProjectCardData = {\n  name: string;\n  description: string;\n  stargazers_count: number;\n  language?: string;\n  homepage?: string;\n  html_url: string;\n  img: string;\n  summary?: string;\n  demoImg?: string;\n};\n\nexport default function ProjectsGrid({ cards }: { cards: ProjectCardData[] }) {\n  // ...existing code...\n  // Sort: projects with images first, then without\n  // Patch Ghost Protocol, JobmateAI, and Network Scanner demoImg\n  const patchedCards = cards.map(card => {\n    if (repoTitle(card.name) === \"Ghost Protocol\") {\n      return { ...card, demoImg: \"https://github.com/Giuseppe552/ghost-protocol/blob/main/docs/demo/demo.gif?raw=true\" };\n    }\n    if (repoTitle(card.name) === \"JobmateAI\" || repoTitle(card.name) === \"Jobmate Ai\") {\n      return { ...card, demoImg: \"https://github.com/Giuseppe552/jobmateAI/blob/main/screenshot.png?raw=true\" };\n    }\n    if (repoTitle(card.name) === \"Network Scanner\") {\n      return { ...card, demoImg: \"https://github.com/Giuseppe552/network-scanner/blob/main/replit-demo.png?raw=true\" };\n    }\n    return card;\n  });\n  const sortedCards = [...patchedCards].sort((a, b) => {\n    if (a.demoImg && !b.demoImg) return -1;\n    if (!a.demoImg && b.demoImg) return 1;\n    return 0;\n  });\n  return (\n    <div className=\"grid grid-cols-1 gap-6\">\n      {sortedCards.map((repo, i) => (\n        <motion.div\n          key={repo.name}\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: i * 0.08 }}\n          className=\"rounded-2xl border border-slate-800 bg-slate-900 p-6 block hover:border-indigo-500/50 shadow-[0_24px_80px_-28px_rgba(0,0,0,0.38)] hover:shadow-[0_36px_120px_-30px_rgba(79,70,229,0.22)] transition-shadow\"\n        >\n          <div className=\"flex flex-col items-start\">\n            <h3 className=\"text-2xl font-bold text-zinc-100 mb-2\">{repoTitle(repo.name)}</h3>\n            {repo.demoImg && (\n              <img\n                src={repo.demoImg}\n                alt={repoTitle(repo.name) + ' demo'}\n                className={\n                  `w-full object-contain rounded-xl mb-4 outline outline-2 outline-indigo-500 outline-offset-0 ` +\n                  (repoTitle(repo.name) === \"Retail Bi Simulator\"\n                    ? \"max-h-72 \"\n                    : repoTitle(repo.name) === \"Ats Helper\"\n                    ? \"max-h-40 \"\n                    : \"max-h-64 \")\n                }\n              />\n            )}\n            {(() => {\n              switch (repoTitle(repo.name)) {\n                case \"Metadata Cleaner\":\n                  return <p className=\"text-zinc-400 text-base mt-1\">Removes hidden metadata from images, PDFs, and DOCX files to protect privacy. Works locally, supports multiple formats, and helps prevent accidental data leaks.</p>;\n                case \"Secure Messaging Cli\":\n                  return <p className=\"text-zinc-400 text-base mt-1\">A command-line tool for end-to-end encrypted messaging and file transfer using RSA and AES. Includes expiring messages and is designed for learning secure communication, not production use.</p>;\n                case \"Ghost Protocol\":\n                  return <p className=\"text-zinc-400 text-base mt-1\">Launches a hardened Tor+Firefox browser and a sidecar dashboard to verify network privacy. Checks for leaks (DNS, WebRTC, HTTPS-only) and teaches how to maintain true anonymity online.</p>;\n                case \"Zenith Ev Trend Analyzer\":\n                  return <p className=\"text-zinc-400 text-base mt-1\">Automates analysis of UK government EV fleet data to reveal electrification trends. Simulates residual value risk for leasing portfolios, helping finance teams understand EV adoption and risk.</p>;\n                case \"Personal Linux Security Toolkit\":\n                  return <p className=\"text-zinc-400 text-base mt-1\">Automates rootkit scans, network monitoring, and system change tracking for Linux. Generates easy-to-read security reports, making system security accessible for non-experts.</p>;\n                case \"Email Compliance Checker\":\n                  return <p className=\"text-zinc-400 text-base mt-1\">Analyzes CSV exports of emails for compliance risks like sensitive terms and external recipients. Flags issues, summarizes KPIs, and provides a clear table of risky messages for legal and compliance teams.</p>;\n                case \"Invoice Reconciliation Tool\":\n                  return <p className=\"text-zinc-400 text-base mt-1\">Compares vendor invoices with accounting exports to automatically flag mismatches and missing records. Generates a downloadable discrepancy report, streamlining data checks for finance teams.</p>;\n                case \"Ats Helper\":\n                  return <p className=\"text-zinc-400 text-base mt-1\">Analyzes and scores CVs against job descriptions to show keyword matches, missing terms, and relevance. Helps recruiters and jobseekers quickly assess ATS compatibility using local, fast NLP.</p>;\n                case \"Network Scanner\":\n                  return <p className=\"text-zinc-400 text-base mt-1\">A fast, multi-threaded Python tool for scanning ports and detecting services on a target network. Performs banner grabbing, saves results, and is ideal for learning network reconnaissance.</p>;\n                case \"Retail Bi Simulator\":\n                  return <p className=\"text-zinc-400 text-base mt-1\">Cleans and aggregates retail transaction data, forecasts revenue, and flags anomalies. Exports BI-ready tables and dashboards for Power BI/Tableau, simulating a real analyst workflow.</p>;\n                case \"JobmateAI\":\n                case \"Jobmate Ai\":\n                  return <p className=\"text-zinc-400 text-base mt-1\">Uses AI to match CVs to job descriptions, providing a semantic similarity score and feedback. Built with Python, Flask, and React, it helps job seekers optimize their applications.</p>;\n                default:\n                  return null;\n              }\n            })()}\n          </div>\n          <div className=\"flex flex-wrap gap-2 mt-4\">\n            {(() => {\n              switch (repoTitle(repo.name)) {\n                case \"Metadata Cleaner\":\n                  return <>{[\"Python\", \"EXIF\", \"PDF\", \"DOCX\", \"JPG\", \"PNG\", \"Privacy\"].map(b => <span key={b} className=\"text-xs bg-zinc-800 text-indigo-400 px-2 py-1 rounded font-mono\">{b}</span>)}</>;\n                case \"Secure Messaging Cli\":\n                  return <>{[\"Python\", \"RSA\", \"AES\", \"JSON\", \"CLI\", \"Cryptography\"].map(b => <span key={b} className=\"text-xs bg-zinc-800 text-indigo-400 px-2 py-1 rounded font-mono\">{b}</span>)}</>;\n                case \"Ghost Protocol\":\n                  return <>{[\"Python\", \"Firefox\", \"Tor\", \"Linux\", \"Tkinter\", \"DNS\", \"WebRTC\", \"HTTPS\"].map(b => <span key={b} className=\"text-xs bg-zinc-800 text-indigo-400 px-2 py-1 rounded font-mono\">{b}</span>)}</>;\n                case \"Zenith Ev Trend Analyzer\":\n                  return <>{[\"Python\", \"Pandas\", \"Matplotlib\", \"CSV\", \"Automation\"].map(b => <span key={b} className=\"text-xs bg-zinc-800 text-indigo-400 px-2 py-1 rounded font-mono\">{b}</span>)}</>;\n                case \"Personal Linux Security Toolkit\":\n                  return <>{[\"Python\", \"rkhunter\", \"chkrootkit\", \"ClamAV\", \"netstat\", \"lsof\"].map(b => <span key={b} className=\"text-xs bg-zinc-800 text-indigo-400 px-2 py-1 rounded font-mono\">{b}</span>)}</>;\n                case \"Email Compliance Checker\":\n                  return <>{[\"Python\", \"Streamlit\", \"Pandas\", \"CSV\", \"Compliance\"].map(b => <span key={b} className=\"text-xs bg-zinc-800 text-indigo-400 px-2 py-1 rounded font-mono\">{b}</span>)}</>;\n                case \"Invoice Reconciliation Tool\":\n                  return <>{[\"Python\", \"Streamlit\", \"Pandas\", \"CSV\"].map(b => <span key={b} className=\"text-xs bg-zinc-800 text-indigo-400 px-2 py-1 rounded font-mono\">{b}</span>)}</>;\n                case \"Ats Helper\":\n                  return <>{[\"Python\", \"spaCy\", \"NLP\", \"PDF\", \"DOCX\", \"TXT\"].map(b => <span key={b} className=\"text-xs bg-zinc-800 text-indigo-400 px-2 py-1 rounded font-mono\">{b}</span>)}</>;\n                case \"Network Scanner\":\n                  return <>{[\"Python\", \"Sockets\", \"Threading\", \"Banner Grabbing\", \"Nmap\"].map(b => <span key={b} className=\"text-xs bg-zinc-800 text-indigo-400 px-2 py-1 rounded font-mono\">{b}</span>)}</>;\n                case \"Retail Bi Simulator\":\n                  return <>{[\"Python\", \"Pandas\", \"Statsmodels\", \"NumPy\", \"Plotly\", \"Streamlit\", \"Power BI\", \"Tableau\", \"SQLite\", \"CSV\"].map(b => <span key={b} className=\"text-xs bg-zinc-800 text-indigo-400 px-2 py-1 rounded font-mono\">{b}</span>)}</>;\n                case \"JobmateAI\":\n                case \"Jobmate Ai\":\n                  return <>{[\"Python\", \"Flask\", \"React\", \"Vite\", \"JavaScript\", \"Hugging Face\", \"pdfplumber\", \"pdfminer.six\"].map(b => <span key={b} className=\"text-xs bg-zinc-800 text-indigo-400 px-2 py-1 rounded font-mono\">{b}</span>)}</>;\n                default:\n                  return repo.language ? <span className=\"text-xs bg-zinc-800 text-indigo-400 px-2 py-1 rounded font-mono\">{repo.language}</span> : null;\n              }\n            })()}\n          </div>\n          <a\n            href={repo.html_url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"mt-4 inline-block px-4 py-2 rounded-xl bg-slate-800 text-indigo-400 font-medium shadow hover:bg-slate-700 hover:text-white transition\"\n          >\n            View on GitHub\n          </a>\n        </motion.div>\n      ))}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/runner/work/giuseppe-portfolio/giuseppe-portfolio/src/components/ProjectsGridWrapper.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/giuseppe-portfolio/giuseppe-portfolio/src/components/ProjectsScrollBar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/giuseppe-portfolio/giuseppe-portfolio/src/components/ResponsiveHeader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/giuseppe-portfolio/giuseppe-portfolio/src/components/SimpleHeader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/giuseppe-portfolio/giuseppe-portfolio/src/components/SiteFooter.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/giuseppe-portfolio/giuseppe-portfolio/src/components/SiteHeader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/giuseppe-portfolio/giuseppe-portfolio/src/components/Typewriter.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/giuseppe-portfolio/giuseppe-portfolio/src/lib/github.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/giuseppe-portfolio/giuseppe-portfolio/src/lib/safeFs.ts","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found existsSync from package \"fs\" with non literal argument at index 0","line":13,"column":48,"nodeType":"CallExpression","endLine":13,"endColumn":64},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readdirSync from package \"fs\" with non literal argument at index 0","line":16,"column":10,"nodeType":"CallExpression","endLine":16,"endColumn":34},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readFileSync from package \"fs\" with non literal argument at index 0","line":26,"column":10,"nodeType":"CallExpression","endLine":26,"endColumn":43}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import fs from \"fs\";\nimport path from \"path\";\n\n// Infer current blog directory from existing code. If a variable like `blogDir`\n// exists, keep its value; otherwise default to `public/blog`.\nconst ROOT = process.cwd();\nconst BLOG_DIR_CANDIDATES = [\n  path.join(ROOT, \"public\", \"blog\"),\n  path.join(ROOT, \"src\", \"content\", \"blog\"),\n  path.join(ROOT, \"blog\"),\n  path.join(ROOT, \"src\", \"app\", \"blog\")\n];\nconst BLOG_DIR = BLOG_DIR_CANDIDATES.find(p => fs.existsSync(p)) ?? BLOG_DIR_CANDIDATES[0];\n\nexport function listBlogSlugs(): string[] {\n  return fs.readdirSync(BLOG_DIR)\n    .filter(n => /^[a-z0-9-_]+\\.mdx?$/i.test(n))\n    .map(n => n.replace(/\\.mdx?$/i, \"\"));\n}\n\nexport function readBlogFile(slug: string): string {\n  const safe = slug.toLowerCase().replace(/[^a-z0-9-_]/g, \"\");\n  const file = path.join(BLOG_DIR, `${safe}.md`);\n  const resolved = path.resolve(file);\n  if (!resolved.startsWith(path.resolve(BLOG_DIR))) throw new Error(\"Invalid slug\");\n  return fs.readFileSync(resolved, \"utf8\");\n}","usedDeprecatedRules":[]}]